// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  auth0Id   String   @unique // Store the unique user ID from Auth0
  email     String   @unique // Email returned by Auth0
  username  String?           // Optional: You can store a username if needed
  posts     Post[]
  threads   Thread[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Thread {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  thread    Thread?  @relation(fields: [threadId], references: [id])
  threadId  Int?
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


